{"version":3,"sources":["webpack:///./src/app/views/pages/accounting-setting/account-list/account-list.component.html","webpack:///./src/app/views/pages/accounting-setting/accounting-setting.component.html","webpack:///./src/app/views/pages/accounting-setting/agregat/agregat.component.html","webpack:///./src/app/views/pages/accounting-setting/cost-center/cost-center.component.html","webpack:///./src/app/views/pages/accounting-setting/create-account/create-account.component.html","webpack:///./src/app/views/pages/accounting-setting/create-tax/create-tax.component.html","webpack:///./src/app/views/pages/accounting-setting/journal-defaut/journal-defaut.component.html","webpack:///./src/app/views/pages/accounting-setting/journal/journal.component.html","webpack:///./src/app/views/pages/accounting-setting/product-ligne/product-ligne.component.html","webpack:///./src/app/views/pages/accounting-setting/sub-account/sub-account.component.html","webpack:///./src/app/views/pages/accounting-setting/account-list/account-list.component.scss","webpack:///./src/app/views/pages/accounting-setting/account-list/account-list.component.ts","webpack:///./src/app/views/pages/accounting-setting/accounting-setting.component.scss","webpack:///./src/app/views/pages/accounting-setting/accounting-setting.component.ts","webpack:///./src/app/views/pages/accounting-setting/accounting-setting.module.ts","webpack:///./src/app/views/pages/accounting-setting/agregat/agregat.component.scss","webpack:///./src/app/views/pages/accounting-setting/agregat/agregat.component.ts","webpack:///./src/app/views/pages/accounting-setting/cost-center/cost-center.component.scss","webpack:///./src/app/views/pages/accounting-setting/cost-center/cost-center.component.ts","webpack:///./src/app/views/pages/accounting-setting/create-account/create-account.component.scss","webpack:///./src/app/views/pages/accounting-setting/create-account/create-account.component.ts","webpack:///./src/app/views/pages/accounting-setting/create-tax/create-tax.component.scss","webpack:///./src/app/views/pages/accounting-setting/create-tax/create-tax.component.ts","webpack:///./src/app/views/pages/accounting-setting/journal-defaut/journal-defaut.component.scss","webpack:///./src/app/views/pages/accounting-setting/journal-defaut/journal-defaut.component.ts","webpack:///./src/app/views/pages/accounting-setting/journal/journal.component.scss","webpack:///./src/app/views/pages/accounting-setting/journal/journal.component.ts","webpack:///./src/app/views/pages/accounting-setting/product-ligne/product-ligne.component.scss","webpack:///./src/app/views/pages/accounting-setting/product-ligne/product-ligne.component.ts","webpack:///./src/app/views/pages/accounting-setting/sub-account/sub-account.component.scss","webpack:///./src/app/views/pages/accounting-setting/sub-account/sub-account.component.ts"],"names":[],"mappings":"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","file":"app-views-pages-accounting-setting-accounting-setting-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-xl-12\\\">\\n\\t\\t<div class=\\\"row row-full-height\\\">\\n\\t\\t\\t<div class=\\\"col-xl-12\\\">\\n\\t\\t\\t\\t<kt-portlet>\\n\\t\\t\\t\\t\\t<kt-portlet-header title=\\\"La liste des Comptes\\\" [class]=\\\"'kt-portlet__head--lg'\\\">\\n\\t\\t\\t\\t\\t</kt-portlet-header>\\n\\t\\t\\t\\t\\t<kt-portlet-body>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<angular-slickgrid class=\\\"col-lg-12\\\" gridId=\\\"AccountsGrid\\\" [columnDefinitions]=\\\"columnDefinitions\\\" [gridOptions]=\\\"gridOptions\\\" [dataset]=\\\"dataset\\\" (onAngularGridCreated)=\\\"doctorGridReady($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t</angular-slickgrid>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</kt-portlet-body>\\n\\t\\t\\t\\t</kt-portlet>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"row row-full-height\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <kt-portlet> \\n                    <kt-portlet-header title=\\\"Ajouter un Agregat\\\" [class]=\\\"'kt-portlet__head--lg'\\\">\\n                    </kt-portlet-header>\\n                    <kt-portlet-body>\\n                        <form class=\\\"kt-form\\\" [formGroup]=\\\"agregatForm\\\">\\n                        \\n                        <div class=\\\"row\\\"> \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Code: *</label>\\n                                <div class=\\\"col-3\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"agregatForm.controls['code'].errors && (agregatForm.controls['code'].dirty || agregatForm.controls['code'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Code de l'Agregat\\\"\\n                                    #code formControlName=\\\"code\\\" required id=\\\"code\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"agregatForm.controls['code'].errors && (agregatForm.controls['code'].dirty || agregatForm.controls['code'].touched)\\\">\\n                                       \\n                                    </div>\\n                                    <div *ngIf=\\\"agregatForm.controls['code'].errors.required\\\" class=\\\"invalid-feedback\\\">Le code est obligatoire</div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Description: *</label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"agregatForm.controls['description'].errors && (agregatForm.controls['description'].dirty || agregatForm.controls['description'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Description de l'Agregat\\\"\\n                                    #description formControlName=\\\"description\\\" required id=\\\"description\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"agregatForm.controls['description'].errors && (agregatForm.controls['description'].dirty || agregatForm.controls['description'].touched)\\\">\\n \\n                                    </div>\\n                                    <div *ngIf=\\\"agregatForm.controls['description'].errors.required\\\" class=\\\"invalid-feedback\\\">La description est obligatoire</div>\\n                                </div>\\n                            </div>\\n\\n     \\n                        \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Totalisation:  </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"entier\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"0\\\" formControlName=\\\"Totalisation\\\">\\n                                    \\n                                </div>\\n                            </div>\\n                        \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Type: * </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <select  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"agregatForm.controls['type'].errors && (agregatForm.controls['type'].dirty || agregatForm.controls['type'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Type de l'etat\\\"\\n                                       #type formControlName=\\\"type\\\" required id=\\\"type\\\" >\\n                                       <option *ngFor=\\\"let object of typeList\\\" [value]=\\\"object.id\\\">{{object.description}}</option>\\n                                    </select>\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"agregatForm.controls['type'].errors && (agregatForm.controls['type'].dirty || agregatForm.controls['type'].touched)\\\">\\n    \\n                                    </div>\\n                                    <div *ngIf=\\\"agregatForm.controls['type'].errors.required\\\" class=\\\"invalid-feedback\\\">Le Type est obligatoire</div>\\n                                </div>\\n                            </div>\\n                        \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Tri ss-compte avant compte: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"ss-compte\\\" formControlName=\\\"ss-compte\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n                    \\n                            \\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Tri ss-compte avant compte: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"ss-compte\\\" formControlName=\\\"ss-compte\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Tri centre cout avant compte: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"ccout\\\" formControlName=\\\"ccout\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Saut Page apres total: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"sautpage\\\" formControlName=\\\"sautpage\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Supprimer en Tete: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"suptete\\\" formControlName=\\\"suptete\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Supprimer en Tete: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"suptete\\\" formControlName=\\\"suptete\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Supprimer Total: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"suptotal\\\" formControlName=\\\"suptotal\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Saut ligne apres total: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"sltotal\\\" formControlName=\\\"sltotal\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Souligner double : </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"sld\\\" formControlName=\\\"sld\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n                        </div> \\n                          \\n                            <div class=\\\"kt-login__actions\\\">\\n                                <button (click)=\\\"submit()\\\" [className]=\\\"loading ? 'btn btn-primary btn-elevate kt-login__btn-primary kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light' : 'btn btn-primary btn-elevate kt-login__btn-primary'\\\">Ajouter Agregat</button>\\n                            </div>\\n                        </form>\\n                    </kt-portlet-body>\\n                </kt-portlet>\\n            </div>\\n       \\n        </div>\\n    </div>\\n\\n</div> \"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"row row-full-height\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <kt-portlet> \\n                    <kt-portlet-header title=\\\"Ajouter un centre de coût\\\" [class]=\\\"'kt-portlet__head--lg'\\\">\\n                    </kt-portlet-header>\\n                    <kt-portlet-body>\\n                        <form class=\\\"kt-form\\\" [formGroup]=\\\"ccForm\\\">\\n                            \\n                            <div class=\\\"row\\\"> \\n                                <div class=\\\"form-group col-12 row\\\">\\n                                    <label class=\\\"col-2 col-form-label text-right\\\">Code: *</label>\\n                                    <div class=\\\"col-3\\\">\\n                                        <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"ccForm.controls['code'].errors && (ccForm.controls['code'].dirty || ccForm.controls['code'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Code de l'sub\\\"\\n                                        #code formControlName=\\\"code\\\" required id=\\\"code\\\" >\\n                                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"ccForm.controls['code'].errors && (ccForm.controls['code'].dirty || ccForm.controls['code'].touched)\\\">\\n                                        \\n                                        </div>\\n                                        <div *ngIf=\\\"ccForm.controls['code'].errors.required\\\" class=\\\"invalid-feedback\\\">Le code est obligatoire</div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group col-12 row\\\">\\n                                    <label class=\\\"col-2 col-form-label text-right\\\">Description: *</label>\\n                                    <div class=\\\"col-lg-9\\\">\\n                                        <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"ccForm.controls['description'].errors && (ccForm.controls['description'].dirty || ccForm.controls['description'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Description de l'sub\\\"\\n                                        #description formControlName=\\\"description\\\" required id=\\\"description\\\" >\\n                                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"ccForm.controls['description'].errors && (ccForm.controls['description'].dirty || ccForm.controls['description'].touched)\\\">\\n    \\n                                        </div>\\n                                        <div *ngIf=\\\"ccForm.controls['description'].errors.required\\\" class=\\\"invalid-feedback\\\">La description est obligatoire</div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group col-12 row\\\">\\n                                    <label class=\\\"col-2 col-form-label text-right\\\"> Actif: </label>\\n                                    <div class=\\\"col-lg-3\\\">\\n                                        <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                            <label>\\n                                                <input type=\\\"checkbox\\\" name=\\\"activated\\\" formControlName=\\\"Actif\\\">\\n                                                <span></span>\\n                                        </label>\\n                                        </span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"row col-lg-12\\\">\\n                                <button class=\\\"btn btn-primary btn-elevate col-lg-2\\\" (click)=\\\"addNewItem()\\\">Ajouter une plage</button>\\n                            </div>\\n                            <br>\\n                            <angular-slickgrid class=\\\"col-lg-12\\\" gridId=\\\"plagescGrid\\\" [columnDefinitions]=\\\"columnDefinitions\\\" [gridOptions]=\\\"gridOptions\\\" [dataset]=\\\"dataset\\\" (onAngularGridCreated)=\\\"angularGridReady($event)\\\">\\n                            </angular-slickgrid>\\n\\n                            \\n                            <div class=\\\"kt-login__actions\\\">\\n                                <button (click)=\\\"submit()\\\" [className]=\\\"loading ? 'btn btn-primary btn-elevate kt-login__btn-primary kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light' : 'btn btn-primary btn-elevate kt-login__btn-primary'\\\">Ajouter centre de coût </button>\\n                            </div>\\n\\n                        </form>\\n                    </kt-portlet-body>\\n                </kt-portlet>\\n            </div>\\n       \\n        </div>\\n   \\n        <div class=\\\"kt-section__content\\\">\\n            <ng-template #content2 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">Code centre de coût</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <angular-slickgrid gridId=\\\"scGrid\\\" [columnDefinitions]=\\\"scColumnDefinitions\\\" [gridOptions]=\\\"scGridOptions\\\" [dataset]=\\\"scDataset\\\" (onAngularGridCreated)=\\\"scGridReady($event)\\\">\\n                    </angular-slickgrid>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Fermer</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveProductCode()\\\">Sélectionner</button>\\n                </div>\\n            </ng-template>\\n            <button hidden id=\\\"openProductModal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"open2(content2)\\\">Launch demo modal</button>\\n        </div>\\n    \\n   \\n   \\n   \\n    </div>\\n\\n\\n   \\n\\n</div> \\n       \\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"row row-full-height\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <kt-portlet> \\n                    <kt-portlet-header title=\\\"Ajouter un Compte\\\" [class]=\\\"'kt-portlet__head--lg'\\\">\\n                    </kt-portlet-header>\\n                    <kt-portlet-body>\\n                        <form class=\\\"kt-form\\\" [formGroup]=\\\"accountForm\\\">\\n                        \\n                        <div class=\\\"row\\\"> \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Code: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"accountForm.controls['code'].errors && (accountForm.controls['code'].dirty || accountForm.controls['code'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Code du compte\\\"\\n                                    #code formControlName=\\\"code\\\" required id=\\\"code\\\">\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"accountForm.controls['code'].errors && (accountForm.controls['code'].dirty || accountForm.controls['code'].touched)\\\">\\n                                        </div>\\n                                </div>\\n                                <div *ngIf=\\\"accountForm.controls['code'].errors.required\\\" class=\\\"invalid-feedback\\\">Le code est obligatoire</div>\\n                                    \\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Description: *</label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"accountForm.controls['description'].errors && (accountForm.controls['description'].dirty || accountForm.controls['description'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Description du compte\\\"\\n                                    #description formControlName=\\\"description\\\" required id=\\\"description\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"accountForm.controls['description'].errors && (accountForm.controls['description'].dirty || accountForm.controls['description'].touched)\\\">\\n                                    </div>\\n                                    <div *ngIf=\\\"accountForm.controls['description'].errors.required\\\" class=\\\"invalid-feedback\\\">La description est obligatoire</div>\\n                                    \\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Type: * </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <select  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"accountForm.controls['type'].errors && (accountForm.controls['type'].dirty || accountForm.controls['type'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Type du compte\\\"\\n                                       #type formControlName=\\\"type\\\" required id=\\\"type\\\" >\\n                                       <option *ngFor=\\\"let object of typeList\\\" [value]=\\\"object.id\\\">{{object.description}}</option>\\n                                    </select>\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"accountForm.controls['type'].errors && (accountForm.controls['type'].dirty || accountForm.controls['type'].touched)\\\">\\n                                    </div>\\n                                    <div *ngIf=\\\"accountForm.controls['type'].errors.required\\\" class=\\\"invalid-feedback\\\">Le Type est obligatoire</div>\\n                                    \\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Devise: * </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class =\\\"form-control-sm\\\" devise=\\\"text\\\" [className]=\\\"accountForm.controls['devise'].errors && (accountForm.controls['devise'].dirty || accountForm.controls['devise'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Devise du compte\\\"\\n                                    #devise formControlName=\\\"devise\\\" required id=\\\"devise\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"accountForm.controls['devise'].errors && (accountForm.controls['devise'].dirty || accountForm.controls['devise'].touched)\\\">\\n                                    </div>\\n                                    <div *ngIf=\\\"accountForm.controls['devise'].errors.required\\\" class=\\\"invalid-feedback\\\">Le Devise est obligatoire</div>\\n                                    \\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Compte Statistique:  </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Compte Statique\\\" formControlName=\\\"Compte Statique\\\">\\n                                    \\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\"> CG Interdite: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"cg-interdite\\\" formControlName=\\\"CG Interdite\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n                    \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\"> Actif: </label>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"activated\\\" formControlName=\\\"Actif\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                            \\n                        \\n                        \\n                            <div class=\\\"kt-login__actions\\\">\\n                                <button (click)=\\\"submit()\\\" [className]=\\\"loading ? 'btn btn-primary btn-elevate kt-login__btn-primary kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light' : 'btn btn-primary btn-elevate kt-login__btn-primary'\\\">Ajouter compte</button>\\n                            </div>\\n                        </form>\\n                    </kt-portlet-body>\\n                </kt-portlet>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</div> \"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"row row-full-height\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <kt-portlet>\\n                    <kt-portlet-header title=\\\"Ajouter une Taxe\\\" [class]=\\\"'kt-portlet__head--lg'\\\">\\n                    </kt-portlet-header>\\n                    <kt-portlet-body>\\n                        <form class=\\\"kt-form\\\" [formGroup]=\\\"taxForm\\\">\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Type Taxe : </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <select  class=\\\"form-control form-control-sm\\\" id=\\\"exampleSelects\\\" formControlName=\\\"typetaxe\\\" value=\\\"TVA\\\">\\n                                        <option value=\\\"TVA\\\">TVA</option>\\n                                        <option value=\\\"RTA\\\">RTA</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n                                </div>\\n                                <label class=\\\"col-3 col-form-label text-right\\\">code: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['code'].errors && (taxForm.controls['code'].dirty || taxForm.controls['code'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"code de Produit\\\"\\n                                    #code formControlName=\\\"code\\\" required id=\\\"code\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['code'].errors && (taxForm.controls['code'].dirty || taxForm.controls['code'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['code'].errors.required\\\" class=\\\"invalid-feedback\\\">La code de Taxe est obligatoire</div>\\n                                \\n                                   \\n                                </div>\\n\\n                            </div>\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Classe: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['classe'].errors && (taxForm.controls['classe'].dirty || taxForm.controls['classe'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"classe de la Taxe\\\"\\n                                    #classe formControlName=\\\"classe\\\" required id=\\\"classe\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['classe'].errors && (taxForm.controls['classe'].dirty || taxForm.controls['classe'].touched)\\\">\\n\\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['classe'].errors.required\\\" class=\\\"invalid-feedback\\\">La classe est obligatoire</div>\\n                                     \\n                                </div>\\n                                <div class=\\\"col-1\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n \\n                                <label class=\\\"col-2 col-form-label text-right\\\">Description: *</label>\\n                                <div class=\\\"col-3\\\">\\n                                    <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['description'].errors && (taxForm.controls['description'].dirty || taxForm.controls['description'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Description\\\"\\n                                    #description formControlName=\\\"description\\\" required id=\\\"description\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['description'].errors && (taxForm.controls['description'].dirty || taxForm.controls['description'].touched)\\\">\\n \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['description'].errors.required\\\" class=\\\"invalid-feedback\\\">La Description est obligatoire</div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Emploi de Taxe: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['emploi'].errors && (taxForm.controls['emploi'].dirty || taxForm.controls['emploi'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Emploi de Taxe\\\"\\n                                    #emploi formControlName=\\\"emploi\\\" required id=\\\"emploi\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['emploi'].errors && (taxForm.controls['emploi'].dirty || taxForm.controls['emploi'].touched)\\\">\\n\\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['emploi'].errors.required\\\" class=\\\"invalid-feedback\\\">L'Emploi de Taxe est obligatoire</div>\\n                                     \\n                                </div>\\n                                <div class=\\\"col-1\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n \\n                                <label class=\\\"col-2 col-form-label text-right\\\">Taux de Taxe: *</label>\\n                                <div class=\\\"col-3\\\">\\n                                    <input  class =\\\"form-control-sm\\\" type=\\\"number\\\" [className]=\\\"taxForm.controls['taux'].errors && (taxForm.controls['taux'].dirty || taxForm.controls['taux'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"0.00%\\\"\\n                                    #taux formControlName=\\\"taux\\\" required id=\\\"taux\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['taux'].errors && (taxForm.controls['taux'].dirty || taxForm.controls['taux'].touched)\\\">\\n \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['description'].errors.required\\\" class=\\\"invalid-feedback\\\">Le Taux de Taxe est obligatoire</div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Date de Validité: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <div class=\\\"input-group input-group-sm\\\">\\n                                        <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"jj-mm-aaa\\\" name=\\\"dp\\\" [(ngModel)]=\\\"dateStruct\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                                        <div class=\\\"input-group-append\\\">\\n                                            <button class=\\\"btn btn-primary btn-icon\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"la la-calendar\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n                                        </div>\\n                                    </div>\\n                                     \\n                                </div>\\n                               \\n                                <label class=\\\"col-2 col-form-label text-right\\\"> Taxe Par Ligne: </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"taxeligne\\\" formControlName=\\\"taxeligne\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                                <label class=\\\"col-1 col-form-label text-right\\\"> Base Taxe: </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"100HT\\\" formControlName=\\\"basetaxe\\\"  >\\n                                \\n                                </div>\\n\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\"> Taux Recupérable: </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"number\\\"  placeholder=\\\"100%\\\" formControlName=\\\"tauxrecup\\\"  >\\n                                \\n                                </div>\\n\\n\\n\\n                                <label class=\\\"col-3 col-form-label text-right\\\">Date d'expiration': *</label>\\n                                <div class=\\\"col-3\\\">\\n                                    <div class=\\\"input-group input-group-sm\\\">\\n                                        <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"jj-mm-aaa\\\" name=\\\"dp\\\" [(ngModel)]=\\\"dateStruct\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                                        <div class=\\\"input-group-append\\\">\\n                                            <button class=\\\"btn btn-primary btn-icon\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"la la-calendar\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n                                        </div>\\n                                    </div>\\n                                     \\n                                </div>\\n                               \\n\\n                            </div>\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\"> MAJ Taxe Permise: </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"taxpermise\\\" formControlName=\\\"taxpermise\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Cumuler a réception: </label>\\n                                <div class=\\\"col-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"cumrecep\\\" formControlName=\\\"cumrecep\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                                \\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\"> Taxe Inclusse Permise: </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"taxincpermise\\\" formControlName=\\\"taxincpermise\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Taxe cumulée à l'utilisation: </label>\\n                                <div class=\\\"col-3\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"cumutil\\\" formControlName=\\\"cumutil\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                                \\n\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Compte Taxe Achat:</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['ctachat'].errors && (taxForm.controls['ctachat'].dirty || taxForm.controls['ctachat'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte Taxe Achat\\\"\\n                                    #ctachat formControlName=\\\"ctachat\\\" required id=\\\"ctachat\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['ctachat'].errors && (taxForm.controls['ctachat'].dirty || taxForm.controls['ctachat'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['ctachat'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                \\n                                \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Taxe Achat Absorbé:</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['ctaabs'].errors && (taxForm.controls['ctaabs'].dirty || taxForm.controls['ctaabs'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Taxe Achat Absorbé\\\"\\n                                    #ctaabs formControlName=\\\"ctaabs\\\" required id=\\\"ctaabs\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['ctaabs'].errors && (taxForm.controls['ctaabs'].dirty || taxForm.controls['ctaabs'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['ctaabs'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                \\n                                \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Compte Taxe CF:</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['ctcf'].errors && (taxForm.controls['ctcf'].dirty || taxForm.controls['ctcf'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Compte Taxe CF\\\"\\n                                    #ctcf formControlName=\\\"ctcf\\\" required id=\\\"ctcf\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['ctcf'].errors && (taxForm.controls['ctcf'].dirty || taxForm.controls['ctcf'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['ctcf'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                \\n                                \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n\\n                            </div>\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\"> Taxe Conserv CF:</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['ctccf'].errors && (taxForm.controls['ctccf'].dirty || taxForm.controls['ctccf'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Compte Taxe CF\\\"\\n                                    #ctccf formControlName=\\\"ctccf\\\" required id=\\\"ctccf\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['ctccf'].errors && (taxForm.controls['ctccf'].dirty || taxForm.controls['ctccf'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['ctccf'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                \\n                                \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n\\n                            </div>\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Compte Suspenssion de Taxe:</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['cstax'].errors && (taxForm.controls['cstax'].dirty || taxForm.controls['cstax'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Compte Taxe CF\\\"\\n                                    #cstax formControlName=\\\"cstax\\\" required id=\\\"cstax\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['cstax'].errors && (taxForm.controls['cstax'].dirty || taxForm.controls['cstax'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['cstax'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                \\n                                \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n\\n                            </div>\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Compte des Remises CC:</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['crcc'].errors && (taxForm.controls['crcc'].dirty || taxForm.controls['crcc'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Compte Taxe CF\\\"\\n                                    #crcc formControlName=\\\"crcc\\\" required id=\\\"crcc\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['crcc'].errors && (taxForm.controls['crcc'].dirty || taxForm.controls['crcc'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['crcc'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                \\n                                \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n\\n                            </div>\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Compte escompte Fournisseur:</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"taxForm.controls['cesf'].errors && (taxForm.controls['cesf'].dirty || taxForm.controls['cesf'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Compte Taxe CF\\\"\\n                                    #cesf formControlName=\\\"cesf\\\" required id=\\\"cesf\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxForm.controls['cesf'].errors && (taxForm.controls['cesf'].dirty || taxForm.controls['cesf'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"taxForm.controls['cesf'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                \\n                                \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n\\n                            </div>\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\"> Commentaire: </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"comment\\\" formControlName=\\\"comment\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                                \\n\\n                            </div>\\n\\n\\n\\n\\n\\n\\n                        </form>\\n                    </kt-portlet-body>\\n                </kt-portlet>\\n            </div>\\n       \\n        </div>\\n    </div>\\n\\n</div> \\n     \\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"row row-full-height\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <kt-portlet> \\n                    <kt-portlet-header title=\\\"Ajouter un journal par defaut\\\" [class]=\\\"'kt-portlet__head--lg'\\\">\\n                    </kt-portlet-header>\\n                    <kt-portlet-body>\\n                        <form class=\\\"kt-form\\\" [formGroup]=\\\"journaldefautForm\\\">\\n                        \\n                        <div class=\\\"row\\\"> \\n\\n\\n                        \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Type transaction: * </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <select  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"journaldefautForm.controls['typetrans'].errors && (journaldefautForm.controls['typetrans'].dirty || journaldefautForm.controls['typetrans'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Type de transaction\\\"\\n                                       #type formControlName=\\\"typetrans\\\" required id=\\\"typetrans\\\" >\\n                                       <option *ngFor=\\\"let object of typetransList\\\" [value]=\\\"object.id\\\">{{object.description}}</option>\\n                                    </select>\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"journaldefautForm.controls['typetrans'].errors && (journaldefautForm.controls['typetrans'].dirty || journaldefautForm.controls['typetrans'].touched)\\\">\\n    \\n                                    </div>\\n                                    <div *ngIf=\\\"journaldefautForm.controls['typetrans'].errors.required\\\" class=\\\"invalid-feedback\\\">Le Type transaction est obligatoire</div>\\n                                </div>\\n                            \\n                                <div class=\\\"col-6\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"compte \\\" formControlName=\\\"desc\\\">\\n                                    \\n                                </div>\\n                            </div>\\n                    \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Type document: * </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <select  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"journaldefautForm.controls['typedoc'].errors && (journaldefautForm.controls['typedoc'].dirty || journaldefautForm.controls['typedoc'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Type de Document\\\"\\n                                       #type formControlName=\\\"typedoc\\\" required id=\\\"typedoc\\\" >\\n                                       <option *ngFor=\\\"let object of typedocList\\\" [value]=\\\"object.id\\\">{{object.description}}</option>\\n                                    </select>\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"journaldefautForm.controls['typedoc'].errors && (journaldefautForm.controls['typedoc'].dirty || journaldefautForm.controls['typedoc'].touched)\\\">\\n    \\n                                    </div>\\n                                    <div *ngIf=\\\"journaldefautForm.controls['typedoc'].errors.required\\\" class=\\\"invalid-feedback\\\">Le Type du Document est obligatoire</div>\\n                                </div>\\n                            \\n                                <div class=\\\"col-6\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"compte \\\" formControlName=\\\"compte\\\">\\n                                    \\n                                </div>\\n                            </div>\\n                    \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">De L'entité:  </label>\\n                                \\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\" \\\" formControlName=\\\"entity\\\">\\n                                    \\n                                </div>\\n\\n                                <label class=\\\"col-2 col-form-label text-right\\\">A L'entité:  </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"compte \\\" formControlName=\\\"entity1\\\">\\n                                    \\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Journal: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"journaldefautForm.controls['journal'].errors && (journaldefautForm.controls['journal'].dirty || journaldefautForm.controls['journal'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Journal\\\"\\n                                    #code formControlName=\\\"journal\\\" required id=\\\"journal\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"journaldefautForm.controls['journal'].errors && (journaldefautForm.controls['journal'].dirty || journaldefautForm.controls['journal'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"journaldefautForm.controls['journal'].errors.required\\\" class=\\\"invalid-feedback\\\">Le journal est obligatoire</div>\\n                                \\n                                   \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"selectJournal(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"flaticon-notes\\\"></i></button>\\n                                </div>\\n                            </div>  \\n\\n\\n\\n                        </div> \\n                          \\n                            <div class=\\\"kt-login__actions\\\">\\n                                <button (click)=\\\"submit()\\\" [className]=\\\"loading ? 'btn btn-primary btn-elevate kt-login__btn-primary kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light' : 'btn btn-primary btn-elevate kt-login__btn-primary'\\\">Ajouter </button>\\n                            </div>\\n                        </form>\\n                    </kt-portlet-body>\\n                </kt-portlet>\\n            </div>\\n       \\n        </div>\\n    </div>\\n\\n</div> \\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"row row-full-height\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <kt-portlet> \\n                    <kt-portlet-header title=\\\"Ajouter un journal\\\" [class]=\\\"'kt-portlet__head--lg'\\\">\\n                    </kt-portlet-header>\\n                    <kt-portlet-body>\\n                        <form class=\\\"kt-form\\\" [formGroup]=\\\"journalForm\\\">\\n                        \\n                        <div class=\\\"row\\\"> \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Code: *</label>\\n                                <div class=\\\"col-3\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"journalForm.controls['code'].errors && (journalForm.controls['code'].dirty || journalForm.controls['code'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Code de l'journal\\\"\\n                                    #code formControlName=\\\"code\\\" required id=\\\"code\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"journalForm.controls['code'].errors && (journalForm.controls['code'].dirty || journalForm.controls['code'].touched)\\\">\\n                                       \\n                                    </div>\\n                                    <div *ngIf=\\\"journalForm.controls['code'].errors.required\\\" class=\\\"invalid-feedback\\\">Le code est obligatoire</div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Description: *</label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"journalForm.controls['description'].errors && (journalForm.controls['description'].dirty || journalForm.controls['description'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Description de l'journal\\\"\\n                                    #description formControlName=\\\"description\\\" required id=\\\"description\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"journalForm.controls['description'].errors && (journalForm.controls['description'].dirty || journalForm.controls['description'].touched)\\\">\\n \\n                                    </div>\\n                                    <div *ngIf=\\\"journalForm.controls['description'].errors.required\\\" class=\\\"invalid-feedback\\\">La description est obligatoire</div>\\n                                </div>\\n                            </div>\\n\\n     \\n                        \\n                        \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Type: * </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <select  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"journalForm.controls['type'].errors && (journalForm.controls['type'].dirty || journalForm.controls['type'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Type de l'etat\\\"\\n                                       #type formControlName=\\\"type\\\" required id=\\\"type\\\" >\\n                                       <option *ngFor=\\\"let object of typeList\\\" [value]=\\\"object.id\\\">{{object.description}}</option>\\n                                    </select>\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"journalForm.controls['type'].errors && (journalForm.controls['type'].dirty || journalForm.controls['type'].touched)\\\">\\n    \\n                                    </div>\\n                                    <div *ngIf=\\\"journalForm.controls['type'].errors.required\\\" class=\\\"invalid-feedback\\\">Le Type est obligatoire</div>\\n                                </div>\\n                            </div>\\n                        \\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Page suivante Journal:  </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"entier\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"0\\\" formControlName=\\\"nextpage\\\">\\n                                    \\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Page suivante centrale:  </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"entier\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"0\\\" formControlName=\\\"nextpagecentral\\\">\\n                                    \\n                                </div>\\n                            </div>\\n\\n\\n                            \\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Dernière entrée Journal:  </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"entier\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"0\\\" formControlName=\\\"lastentry\\\">\\n                                    \\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-2 col-form-label text-right\\\">Dernière entrée centrale:  </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"entier\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"0\\\" formControlName=\\\"lastentrycentral\\\">\\n                                    \\n                                </div>\\n                            </div>\\n\\n\\n\\n\\n                        </div> \\n                          \\n                            <div class=\\\"kt-login__actions\\\">\\n                                <button (click)=\\\"submit()\\\" [className]=\\\"loading ? 'btn btn-primary btn-elevate kt-login__btn-primary kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light' : 'btn btn-primary btn-elevate kt-login__btn-primary'\\\">Ajouter journal</button>\\n                            </div>\\n                        </form>\\n                    </kt-portlet-body>\\n                </kt-portlet>\\n            </div>\\n       \\n        </div>\\n    </div>\\n\\n</div> \"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"row row-full-height\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <kt-portlet> \\n                    <kt-portlet-header title=\\\"Ajouter une ligne de Produit\\\" [class]=\\\"'kt-portlet__head--lg'\\\">\\n                    </kt-portlet-header>\\n                    <kt-portlet-body>\\n                        <form class=\\\"kt-form\\\" [formGroup]=\\\"productligneForm\\\">\\n                        \\n                        <div class=\\\"row\\\"> \\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\">Ligne Produit: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"productligneForm.controls['ligne'].errors && (productligneForm.controls['ligne'].dirty || productligneForm.controls['ligne'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Ligne de Produit\\\"\\n                                    #ligne formControlName=\\\"ligne\\\" required id=\\\"ligne\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"productligneForm.controls['ligne'].errors && (productligneForm.controls['ligne'].dirty || productligneForm.controls['ligne'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"productligneForm.controls['ligne'].errors.required\\\" class=\\\"invalid-feedback\\\">La ligne de produit est obligatoire</div>\\n                                \\n                                   \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n                            </div>  \\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\">Description: *</label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"productligneForm.controls['description'].errors && (productligneForm.controls['description'].dirty || productligneForm.controls['description'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Description de la ligne\\\"\\n                                    #description formControlName=\\\"description\\\" required id=\\\"description\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"productligneForm.controls['description'].errors && (productligneForm.controls['description'].dirty || productligneForm.controls['description'].touched)\\\">\\n \\n                                    </div>\\n                                    <div *ngIf=\\\"productligneForm.controls['description'].errors.required\\\" class=\\\"invalid-feedback\\\">La description est obligatoire</div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\">% Tolérence:  </label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"9999,99\\\"  formControlName=\\\"tolerence\\\">\\n                                    \\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> a Taxer: </label>\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"ataxer\\\" formControlName=\\\"ataxer\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\">Taux Taxe: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"productligneForm.controls['tauxtaxe'].errors && (productligneForm.controls['tauxtaxe'].dirty || productligneForm.controls['tauxtaxe'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"taux de taxe\\\"\\n                                    #tauxtaxe formControlName=\\\"tauxtaxe\\\" required id=\\\"tauxtaxe\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"productligneForm.controls['tauxtaxe'].errors && (productligneForm.controls['tauxtaxe'].dirty || productligneForm.controls['tauxtaxe'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"productligneForm.controls['tauxtaxe'].errors.required\\\" class=\\\"invalid-feedback\\\">Le Taux est obligatoire</div>\\n                                \\n                                   \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n                            </div>  \\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\">ss compte par defaut: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"productligneForm.controls['sscompte'].errors && (productligneForm.controls['sscompte'].dirty || productligneForm.controls['sscompte'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"sous compte\\\"\\n                                    #sscompte formControlName=\\\"sscompte\\\" required id=\\\"sscompte\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"productligneForm.controls['sscompte'].errors && (productligneForm.controls['sscompte'].dirty || productligneForm.controls['sscompte'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"productligneForm.controls['sscompte'].errors.required\\\" class=\\\"invalid-feedback\\\">Le sous compte est obligatoire</div>\\n                                \\n                                   \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n\\n\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Remplacer: </label>\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"remplacer\\\" formControlName=\\\"remplacer\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            \\n\\n\\n                            </div> \\n                            \\n                            \\n\\n                            <div class=\\\"form-group col-12 row\\\">\\n                                <label class=\\\"col-3 col-form-label text-right\\\">Centre de cout par defaut: *</label>\\n                                <div class=\\\"col-2\\\">\\n                                    <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"productligneForm.controls['ccout'].errors && (productligneForm.controls['ccout'].dirty || productligneForm.controls['ccout'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Centre cout\\\"\\n                                    #ccout formControlName=\\\"ccout\\\" required id=\\\"ccout\\\" >\\n                                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"productligneForm.controls['ccout'].errors && (productligneForm.controls['ccout'].dirty || productligneForm.controls['ccout'].touched)\\\">\\n                                        \\n                                    </div>\\n                                    <div *ngIf=\\\"productligneForm.controls['ccout'].errors.required\\\" class=\\\"invalid-feedback\\\">Le Centre cout est obligatoire</div>\\n                                \\n                                   \\n                                </div>\\n\\n                                <div class=\\\"col-1\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                </div>\\n\\n\\n                                <label class=\\\"col-3 col-form-label text-right\\\"> Remplacer: </label>\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"remplacercc\\\" formControlName=\\\"remplacercc\\\">\\n                                            <span></span>\\n                                    </label>\\n                                    </span>\\n                                </div>\\n                            \\n\\n\\n                            </div> \\n\\n                            <!--englet-->\\n                                    <div class=\\\"compte parametrage\\\">\\n                                        <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n                                            <li class=\\\"nav-item\\\">\\n                                                <a class=\\\"nav-link active\\\" id=\\\"stock-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#stock\\\" aria-controls=\\\"stock-tab\\\">\\n                                                    <span class=\\\"nav-icon\\\">\\n                                                        <i class=\\\"flaticon2-chat-1\\\"></i>\\n                                                    </span>\\n                                                    <span class=\\\"nav-text\\\">Comptes de Stock</span>\\n                                                </a>\\n                                            </li>\\n                                            <li class=\\\"nav-item\\\">\\n                                                <a class=\\\"nav-link\\\" id=\\\"vente-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#vente\\\" aria-controls=\\\"vente-tab\\\">\\n                                                    <span class=\\\"nav-icon\\\">\\n                                                        <i class=\\\"flaticon2-layers-1\\\"></i>\\n                                                    </span>\\n                                                    <span class=\\\"nav-text\\\">Comptes des Ventes</span>\\n                                                </a>\\n                                            </li>\\n                                            <li class=\\\"nav-item\\\">\\n                                                <a class=\\\"nav-link\\\" id=\\\"achat-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#achat\\\" aria-controls=\\\"achat-tab\\\">\\n                                                    <span class=\\\"nav-icon\\\">\\n                                                        <i class=\\\"flaticon2-layers-1\\\"></i>\\n                                                    </span>\\n                                                    <span class=\\\"nav-text\\\">Comptes des Achats</span>\\n                                                </a>\\n                                            </li>\\n                                            <li class=\\\"nav-item\\\">\\n                                                <a class=\\\"nav-link\\\" id=\\\"prod-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#prod\\\" aria-controls=\\\"prod-tab\\\">\\n                                                    <span class=\\\"nav-icon\\\">\\n                                                        <i class=\\\"flaticon2-rocket-1\\\"></i>\\n                                                    </span>\\n                                                    <span class=\\\"nav-text\\\">Comptes de production</span>\\n                                                </a>\\n                                            </li>\\n                                        </ul>\\n                                        \\n                                        <div class=\\\"tab-content mt-5\\\" id=\\\"myTabContent\\\">\\n                                        \\n                                            <div class=\\\"tab-pane fade active show\\\" id=\\\"stock\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"stock-tab\\\">\\n\\n                                                <form class=\\\"kt-form\\\" [formGroup]=\\\"stockForm\\\">   \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte Stock: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"stockForm.controls['cstock'].errors && (stockForm.controls['cstock'].dirty || stockForm.controls['cstock'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cstock formControlName=\\\"cstock\\\" required id=\\\"cstock\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"stockForm.controls['cstock'].errors && (stockForm.controls['cstock'].dirty || stockForm.controls['cstock'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"stockForm.controls['cstock'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scstock\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccstock\\\" >\\n                                                            \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n\\n                                                    \\n                                                    \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte Ecart Stock:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"stockForm.controls['cecart'].errors && (stockForm.controls['cecart'].dirty || stockForm.controls['cecart'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte ecart\\\"\\n                                                            #cecart formControlName=\\\"cecart\\\" required id=\\\"cecart\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"stockForm.controls['cecart'].errors && (stockForm.controls['cecart'].dirty || stockForm.controls['cecart'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"stockForm.controls['cecart'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                        <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" placeholder=\\\"sous compte\\\"  formControlName=\\\"scecart\\\"  >\\n                                                        \\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccecart\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n\\n\\n                                                    </div>  \\n                                                    \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte de Rebut:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"stockForm.controls['crebut'].errors && (stockForm.controls['crebut'].dirty || stockForm.controls['crebut'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte rebut\\\"\\n                                                            #crebut formControlName=\\\"crebut\\\" required id=\\\"crebut\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"stockForm.controls['crebut'].errors && (stockForm.controls['crebut'].dirty || stockForm.controls['crebut'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"stockForm.controls['crebut'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"screbut\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccrebut\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n\\n\\n                                                    </div> \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Revaler:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"stockForm.controls['reval'].errors && (stockForm.controls['reval'].dirty || stockForm.controls['reval'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte rebut\\\"\\n                                                            #reval formControlName=\\\"reval\\\" required id=\\\"reval\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"stockForm.controls['reval'].errors && (stockForm.controls['reval'].dirty || stockForm.controls['reval'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"stockForm.controls['reval'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"sreval\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"creval\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n\\n\\n                                                    </div> \\n                                                \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte Ecart transite:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"stockForm.controls['cetrans'].errors && (stockForm.controls['cetrans'].dirty || stockForm.controls['cetrans'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte rebut\\\"\\n                                                            #cetrans formControlName=\\\"cetrans\\\" required id=\\\"cetrans\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"stockForm.controls['cetrans'].errors && (stockForm.controls['cetrans'].dirty || stockForm.controls['cetrans'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"stockForm.controls['cetrans'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scetrans\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccetrans\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n\\n\\n                                                    </div> \\n\\n                              \\n                                \\n                               \\n                                                </form>    \\n                                            </div>\\n                                       \\n                                          \\n                                            <div class=\\\"tab-pane fade\\\" id=\\\"vente\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"vente-tab\\\">\\n                                                <form class=\\\"kt-form\\\" [formGroup]=\\\"venteForm\\\">  \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte de Vente: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"venteForm.controls['cvente'].errors && (venteForm.controls['cvente'].dirty || venteForm.controls['cvente'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cvente formControlName=\\\"cvente\\\" required id=\\\"cvente\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"venteForm.controls['cvente'].errors && (venteForm.controls['cvente'].dirty || venteForm.controls['cvente'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"venteForm.controls['cvente'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scvente\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccvente\\\" >\\n                                                            \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n    \\n                                                    \\n                                                    \\n        \\n                                                    \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte Remise Vente:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"venteForm.controls['cremise'].errors && (venteForm.controls['cremise'].dirty || venteForm.controls['cremise'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte rebut\\\"\\n                                                            #cremise formControlName=\\\"cremise\\\" required id=\\\"cremise\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"venteForm.controls['cremise'].errors && (venteForm.controls['cremise'].dirty || venteForm.controls['cremise'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"venteForm.controls['cremise'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scremise\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccremise\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n    \\n    \\n                                                    </div> \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte CPV matières:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"venteForm.controls['cpv'].errors && (venteForm.controls['cpv'].dirty || venteForm.controls['cpv'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte rebut\\\"\\n                                                            #cpv formControlName=\\\"cpv\\\" required id=\\\"cpv\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"venteForm.controls['cpv'].errors && (venteForm.controls['cpv'].dirty || venteForm.controls['cpv'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"venteForm.controls['cpv'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scpv\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccpv\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n    \\n    \\n                                                    </div> \\n                                                \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte CPV MO:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"venteForm.controls['cpvmo'].errors && (venteForm.controls['cpvmo'].dirty || venteForm.controls['cpvmo'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte rebut\\\"\\n                                                            #cpvmo formControlName=\\\"cpvmo\\\" required id=\\\"cpvmo\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"venteForm.controls['cpvmo'].errors && (venteForm.controls['cpvmo'].dirty || venteForm.controls['cpvmo'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"venteForm.controls['cpvmo'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scpvmo\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccpvmo\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n    \\n    \\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte CPV FGV:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"venteForm.controls['cpvfgv'].errors && (venteForm.controls['cpvfgv'].dirty || venteForm.controls['cpvfgv'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte rebut\\\"\\n                                                            #cpvfgv formControlName=\\\"cpvfgv\\\" required id=\\\"cpvfgv\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"venteForm.controls['cpvfgv'].errors && (venteForm.controls['cpvfgv'].dirty || venteForm.controls['cpvfgv'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"venteForm.controls['cpvfgv'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scpvfgv\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccpvfgv\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n    \\n    \\n                                                    </div>\\n    \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte CPV FGF:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"venteForm.controls['cpvfgf'].errors && (venteForm.controls['cpvfgf'].dirty || venteForm.controls['cpvfgf'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte rebut\\\"\\n                                                            #cpvfgf formControlName=\\\"cpvfgf\\\" required id=\\\"cpvfgf\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"venteForm.controls['cpvfgf'].errors && (venteForm.controls['cpvfgf'].dirty || venteForm.controls['cpvfgf'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"venteForm.controls['cpvfgf'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scpvfgf\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccpvfgf\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n    \\n    \\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte CPV sous-trait:</label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"venteForm.controls['cpvst'].errors && (venteForm.controls['cpvst'].dirty || venteForm.controls['cpvst'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte rebut\\\"\\n                                                            #cpvst formControlName=\\\"cpvst\\\" required id=\\\"cpvst\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"venteForm.controls['cpvst'].errors && (venteForm.controls['cpvst'].dirty || venteForm.controls['cpvst'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"venteForm.controls['cpvst'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scpvst\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccpvst\\\"  >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectventeForm(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n    \\n    \\n                                                    </div>\\n\\n\\n\\n                                                </form>\\n                                                \\n\\n                                                \\n\\n\\n                                            </div>\\n                                            <div class=\\\"tab-pane fade\\\" id=\\\"achat\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"achat-tab\\\">\\n                                                <form class=\\\"kt-form\\\" [formGroup]=\\\"achatForm\\\">  \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte Achats: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"achatForm.controls['cachat'].errors && (achatForm.controls['cachat'].dirty || achatForm.controls['cachat'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cachat formControlName=\\\"cachat\\\" required id=\\\"cachat\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"achatForm.controls['cachat'].errors && (achatForm.controls['cachat'].dirty || achatForm.controls['cachat'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"achatForm.controls['cachat'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scachat\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccachat\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n    \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte Récept OA: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"achatForm.controls['croa'].errors && (achatForm.controls['croa'].dirty || achatForm.controls['croa'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #croa formControlName=\\\"croa\\\" required id=\\\"croa\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"achatForm.controls['croa'].errors && (achatForm.controls['croa'].dirty || achatForm.controls['croa'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"achatForm.controls['croa'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scroa\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccroa\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n    \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte input FGF: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"achatForm.controls['cifgf'].errors && (achatForm.controls['cifgf'].dirty || achatForm.controls['cifgf'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cifgf formControlName=\\\"cifgf\\\" required id=\\\"cifgf\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"achatForm.controls['cifgf'].errors && (achatForm.controls['cifgf'].dirty || achatForm.controls['cifgf'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"achatForm.controls['cifgf'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scifgf\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccifgf\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Ecart Prix OA: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"achatForm.controls['cepoa'].errors && (achatForm.controls['cepoa'].dirty || achatForm.controls['cepoa'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cepoa formControlName=\\\"cepoa\\\" required id=\\\"cepoa\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"achatForm.controls['cepoa'].errors && (achatForm.controls['cepoa'].dirty || achatForm.controls['cepoa'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"achatForm.controls['cepoa'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scepoa\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccepoa\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Cp Ecart CF: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"achatForm.controls['cecf'].errors && (achatForm.controls['cecf'].dirty || achatForm.controls['cecf'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cecf formControlName=\\\"cecf\\\" required id=\\\"cecf\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"achatForm.controls['cecf'].errors && (achatForm.controls['cecf'].dirty || achatForm.controls['cecf'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"achatForm.controls['cecf'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scecf\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccecf\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n    \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Cp Ecart Taux CF: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"achatForm.controls['cetcf'].errors && (achatForm.controls['cetcf'].dirty || achatForm.controls['cetcf'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cetcf formControlName=\\\"cetcf\\\" required id=\\\"cetcf\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"achatForm.controls['cetcf'].errors && (achatForm.controls['cetcf'].dirty || achatForm.controls['cetcf'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"achatForm.controls['cetcf'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scetcf\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccetcf\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n    \\n\\n\\n\\n                                                </form>\\n                                            </div>\\n \\n                                            <div class=\\\"tab-pane fade\\\" id=\\\"prod\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"prod-tab\\\">\\n                                                <form class=\\\"kt-form\\\" [formGroup]=\\\"prodForm\\\">  \\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte STK Atelier: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"prodForm.controls['csata'].errors && (prodForm.controls['csata'].dirty || prodForm.controls['csata'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock ATL\\\"\\n                                                            #csata formControlName=\\\"csata\\\" required id=\\\"csata\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"prodForm.controls['csata'].errors && (prodForm.controls['csata'].dirty || prodForm.controls['csata'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"prodForm.controls['csata'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scsata\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccsata\\\" >\\n                                                        \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Ecart Util Matière: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"prodForm.controls['ceum'].errors && (prodForm.controls['ceum'].dirty || prodForm.controls['ceum'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #ceum formControlName=\\\"ceum\\\" required id=\\\"ceum\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"prodForm.controls['ceum'].errors && (prodForm.controls['ceum'].dirty || prodForm.controls['ceum'].touched)\\\">\\n                                                                \\n                                                            </div>\\n                                                            <div *ngIf=\\\"prodForm.controls['ceum'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n                                                        \\n                                                        \\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n    \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"sceum\\\" >\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"cceum\\\" >\\n                                                            \\n                                                        </div>\\n                                                        \\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                        \\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Ecart Taux Matière: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"prodForm.controls['cetm'].errors && (prodForm.controls['cetm'].dirty || prodForm.controls['cetm'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cetm formControlName=\\\"cetm\\\" required id=\\\"cetm\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"prodForm.controls['cetm'].errors && (prodForm.controls['cetm'].dirty || prodForm.controls['cetm'].touched)\\\">\\n\\n                                                            </div>\\n                                                            <div *ngIf=\\\"prodForm.controls['cetm'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"sceum\\\" >\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"cceum\\\" >\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Ecart Mélange: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"prodForm.controls['ceme'].errors && (prodForm.controls['ceme'].dirty || prodForm.controls['ceme'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #ceme formControlName=\\\"ceme\\\" required id=\\\"ceme\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"prodForm.controls['ceme'].errors && (prodForm.controls['ceme'].dirty || prodForm.controls['ceme'].touched)\\\">\\n\\n                                                            </div>\\n                                                            <div *ngIf=\\\"prodForm.controls['ceme'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"sceme\\\" >\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"cceme\\\" >\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                    </div>\\n\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Coût Production: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"prodForm.controls['cprod'].errors && (prodForm.controls['cprod'].dirty || prodForm.controls['cprod'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cprod formControlName=\\\"cprod\\\" required id=\\\"cprod\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"prodForm.controls['cprod'].errors && (prodForm.controls['cprod'].dirty || prodForm.controls['cprod'].touched)\\\">\\n\\n                                                            </div>\\n                                                            <div *ngIf=\\\"prodForm.controls['cprod'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scprod\\\" >\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccprod\\\" >\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Ecart Util Sous-Traite: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"prodForm.controls['ceust'].errors && (prodForm.controls['ceust'].dirty || prodForm.controls['ceust'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #ceust formControlName=\\\"ceust\\\" required id=\\\"ceust\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"prodForm.controls['ceust'].errors && (prodForm.controls['ceust'].dirty || prodForm.controls['ceust'].touched)\\\">\\n\\n                                                            </div>\\n                                                            <div *ngIf=\\\"prodForm.controls['ceust'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"sceust\\\" >\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"cceust\\\" >\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                    </div>\\n\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Taux ST: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"prodForm.controls['ctst'].errors && (prodForm.controls['ctst'].dirty || prodForm.controls['ctst'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #ctst formControlName=\\\"ctst\\\" required id=\\\"ctst\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"prodForm.controls['ctst'].errors && (prodForm.controls['ctst'].dirty || prodForm.controls['ctst'].touched)\\\">\\n\\n                                                            </div>\\n                                                            <div *ngIf=\\\"prodForm.controls['ctst'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"sctst\\\" >\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"cctst\\\" >\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte en cours: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"prodForm.controls['cencour'].errors && (prodForm.controls['cencour'].dirty || prodForm.controls['cencour'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cencour formControlName=\\\"cencour\\\" required id=\\\"cencour\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"prodForm.controls['cencour'].errors && (prodForm.controls['cencour'].dirty || prodForm.controls['cencour'].touched)\\\">\\n\\n                                                            </div>\\n                                                            <div *ngIf=\\\"prodForm.controls['cencour'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scencour\\\" >\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccencour\\\" >\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                    </div>\\n                                                    <div class=\\\"form-group col-12 row\\\">\\n                                                        <label class=\\\"col-3 col-form-label text-right\\\">Compte Ecart Coût OF: </label>\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"prodForm.controls['cecof'].errors && (prodForm.controls['cecof'].dirty || prodForm.controls['cecof'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"compte stock\\\"\\n                                                            #cecof formControlName=\\\"cecof\\\" required id=\\\"cecof\\\" >\\n                                                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"prodForm.controls['cecof'].errors && (prodForm.controls['cecof'].dirty || prodForm.controls['cecof'].touched)\\\">\\n\\n                                                            </div>\\n                                                            <div *ngIf=\\\"prodForm.controls['cecof'].errors.required\\\" class=\\\"invalid-feedback\\\">Le compte est obligatoire</div>\\n\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"sous compte\\\" formControlName=\\\"scecof\\\" >\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-2\\\">\\n                                                            <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  placeholder=\\\"centre cout\\\" formControlName=\\\"ccecof\\\" >\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-1\\\">\\n                                                            <button type=\\\"button\\\" (click)=\\\"selectproductligne(content)\\\" class=\\\"form-control form-control-sm btn-danger  btn-circle btn-icon\\\"><i class=\\\"icon-2x text-dark-50 flaticon2-magnifier-tool\\\"></i></button>\\n                                                        </div>\\n                                                    </div>    \\n\\n                                                    \\n\\n                                                </form>   \\n\\n\\n\\n                                            </div>   \\n\\n\\n\\n\\n\\n\\n\\n                                        </div>\\n                                    </div>      \\n                            <!--englet-->\\n                            \\n                        </div> \\n                          \\n                            <div class=\\\"kt-login__actions\\\">\\n                                <button (click)=\\\"submit()\\\" [className]=\\\"loading ? 'btn btn-primary btn-elevate kt-login__btn-primary kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light' : 'btn btn-primary btn-elevate kt-login__btn-primary'\\\">Ajouter </button>\\n                            </div>\\n                        </form>\\n                    </kt-portlet-body>\\n                </kt-portlet>\\n            </div>\\n       \\n        </div>\\n    </div>\\n\\n</div> \\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"row row-full-height\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <kt-portlet> \\n                    <kt-portlet-header title=\\\"Ajouter un sous compte\\\" [class]=\\\"'kt-portlet__head--lg'\\\">\\n                    </kt-portlet-header>\\n                    <kt-portlet-body>\\n                        <form class=\\\"kt-form\\\" [formGroup]=\\\"subForm\\\">\\n                            \\n                            <div class=\\\"row\\\"> \\n                                <div class=\\\"form-group col-12 row\\\">\\n                                    <label class=\\\"col-2 col-form-label text-right\\\">Code: *</label>\\n                                    <div class=\\\"col-3\\\">\\n                                        <input  class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [className]=\\\"subForm.controls['code'].errors && (subForm.controls['code'].dirty || subForm.controls['code'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Code de l'sub\\\"\\n                                        #code formControlName=\\\"code\\\" required id=\\\"code\\\" >\\n                                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"subForm.controls['code'].errors && (subForm.controls['code'].dirty || subForm.controls['code'].touched)\\\">\\n                                        \\n                                        </div>\\n                                        <div *ngIf=\\\"subForm.controls['code'].errors.required\\\" class=\\\"invalid-feedback\\\">Le code est obligatoire</div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group col-12 row\\\">\\n                                    <label class=\\\"col-2 col-form-label text-right\\\">Description: *</label>\\n                                    <div class=\\\"col-lg-9\\\">\\n                                        <input  class =\\\"form-control-sm\\\" type=\\\"text\\\" [className]=\\\"subForm.controls['description'].errors && (subForm.controls['description'].dirty || subForm.controls['description'].touched) ? 'form-control form-control-sm is-invalid' : 'form-control form-control-sm'\\\" placeholder=\\\"Description de l'sub\\\"\\n                                        #description formControlName=\\\"description\\\" required id=\\\"description\\\" >\\n                                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"subForm.controls['description'].errors && (subForm.controls['description'].dirty || subForm.controls['description'].touched)\\\">\\n    \\n                                        </div>\\n                                        <div *ngIf=\\\"subForm.controls['description'].errors.required\\\" class=\\\"invalid-feedback\\\">La description est obligatoire</div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group col-12 row\\\">\\n                                    <label class=\\\"col-2 col-form-label text-right\\\"> Actif: </label>\\n                                    <div class=\\\"col-lg-3\\\">\\n                                        <span class=\\\"kt-switch kt-switch--outline kt-switch--icon \\\">\\n                                            <label>\\n                                                <input type=\\\"checkbox\\\" name=\\\"activated\\\" formControlName=\\\"Actif\\\">\\n                                                <span></span>\\n                                        </label>\\n                                        </span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"row col-lg-12\\\">\\n                                <button class=\\\"btn btn-primary btn-elevate col-lg-2\\\" (click)=\\\"addNewItem()\\\">Ajouter une plage</button>\\n                            </div>\\n                            <br>\\n                            <angular-slickgrid class=\\\"col-lg-12\\\" gridId=\\\"plagescGrid\\\" [columnDefinitions]=\\\"columnDefinitions\\\" [gridOptions]=\\\"gridOptions\\\" [dataset]=\\\"dataset\\\" (onAngularGridCreated)=\\\"angularGridReady($event)\\\">\\n                            </angular-slickgrid>\\n\\n                            \\n                            <div class=\\\"kt-login__actions\\\">\\n                                <button (click)=\\\"submit()\\\" [className]=\\\"loading ? 'btn btn-primary btn-elevate kt-login__btn-primary kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light' : 'btn btn-primary btn-elevate kt-login__btn-primary'\\\">Ajouter sous compte</button>\\n                            </div>\\n\\n                        </form>\\n                    </kt-portlet-body>\\n                </kt-portlet>\\n            </div>\\n       \\n        </div>\\n   \\n        <div class=\\\"kt-section__content\\\">\\n            <ng-template #content2 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">Code sous compte</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <angular-slickgrid gridId=\\\"scGrid\\\" [columnDefinitions]=\\\"scColumnDefinitions\\\" [gridOptions]=\\\"scGridOptions\\\" [dataset]=\\\"scDataset\\\" (onAngularGridCreated)=\\\"scGridReady($event)\\\">\\n                    </angular-slickgrid>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Fermer</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveProductCode()\\\">Sélectionner</button>\\n                </div>\\n            </ng-template>\\n            <button hidden id=\\\"openProductModal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"open2(content2)\\\">Launch demo modal</button>\\n        </div>\\n    \\n   \\n   \\n   \\n    </div>\\n\\n\\n   \\n\\n</div> \\n       \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9hY2NvdW50LWxpc3QvYWNjb3VudC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Column, GridOption, OnEventArgs, AngularGridInstance, GridService, Formatters } from 'angular-slickgrid';\nimport { AccountsService } from '../../../../core/application';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'kt-account-list',\n  templateUrl: './account-list.component.html',\n  styleUrls: ['./account-list.component.scss']\n})\nexport class AccountListComponent implements OnInit {\n  accountGrid: AngularGridInstance;\n  grid: any;\n  gridService: GridService;\n  dataView: any;\n\n  columnDefinitions: Column[] = [];\n  gridOptions: GridOption = {};\n  dataset: any = [];\n\n  constructor(private accountsService: AccountsService,\n              private router: Router) { }\n\n  accountGridReady(angularGrid: AngularGridInstance) {\n    this.accountGrid = angularGrid;\n    this.dataView = angularGrid.dataView;\n    this.grid = angularGrid.slickGrid;\n    this.gridService = angularGrid.gridService;\n  }\n  ngOnInit() {\n    this.columnDefinitions = [\n      {\n        id: 'id', name: 'Id', field: 'id', sortable: true, width: 30,\n        formatter: Formatters.editIcon,\n        onCellClick: (e: Event, args: OnEventArgs) => {\n          const id = args.dataContext['id']\n          this.router.navigateByUrl('/demo1/accounting-setting/edit-account/'+id)\n\n        }\n      },\n      { id: 'code', name: 'code', field: 'code', sortable: true, width: 50, filterable: true },\n      { id: 'description', name: 'description', field: 'description', sortable: true, width: 170, filterable: true },\n      \n    ];\n    this.gridOptions = {\n      enableAutoResize: true,       // true by default\n      enableCellNavigation: true,\n      enableFiltering: true,\n      enablePagination: true,\n      pagination: {\n        pageSizes: [10, 15, 20, 25, 30, 40, 50, 75, 100],\n        pageSize: 10,\n        totalItems: 0\n      },\n    };\n\n    // fill the dataset with your data\n\n    this.accountsService.getAllAccounts().subscribe(\n      res => this.dataset = res,\n      err => console.log('errro'),\n      () => console.log('finish')\n    )\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9hY2NvdW50aW5nLXNldHRpbmcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kt-accounting-setting',\n  templateUrl: './accounting-setting.component.html',\n  styleUrls: ['./accounting-setting.component.scss']\n})\nexport class AccountingSettingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// Angular\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgbDate, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DatePipe } from '@angular/common'\nimport { PartialsModule } from '../../partials/partials.module';\nimport { MaterialPreviewModule } from '../../partials/content/general/material-preview/material-preview.module';\nimport { SettingsService, DataSharingService, InventoryService, InvoicingService, AfterSaleService } from '../../../core/application';\n\n\n// Import AG Grid\nimport { AgGridModule } from 'ag-grid-angular';\n\n// addons\nimport { MatInputModule } from '@angular/material';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AngularSlickgridModule } from 'angular-slickgrid'\n\nimport { AccountingSettingComponent } from './accounting-setting.component';\nimport {CreateAccountComponent} from './create-account/create-account.component'\nimport {AccountListComponent } from './account-list/account-list.component';\nimport {AgregatComponent } from './agregat/agregat.component';\nimport { JournalComponent } from './journal/journal.component';\nimport { JournalDefautComponent } from './journal-defaut/journal-defaut.component';\nimport { ProductLigneComponent } from './product-ligne/product-ligne.component';\nimport { SubAccountComponent } from './sub-account/sub-account.component';\nimport { CostCenterComponent } from './cost-center/cost-center.component';\nimport { CreateTaxComponent } from './create-tax/create-tax.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: 'create-account',\n    component: CreateAccountComponent\n  },\n  {\n    path: 'account-list',\n    component: AccountListComponent\n  },\n  {\n    path: 'sub-account',\n    component: SubAccountComponent \n  },\n  {\n    path: 'cost-center',\n    component: CostCenterComponent\n  },\n  {\n    path: 'agregat',\n    component: AgregatComponent\n  },\n  {\n    path: 'journal',\n    component: JournalComponent\n  },\n  {\n    path: 'journal-defaut',\n    component: JournalDefautComponent\n  },\n  {\n    path: 'product-ligne',\n    component: ProductLigneComponent\n  },\n  {\n    path: 'create-tax',\n    component: CreateTaxComponent\n  },\n\n]\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    PartialsModule,\n    MaterialPreviewModule,\n    NgbModule,\n    MatInputModule,\n    AgGridModule.withComponents([]),\n    AngularSlickgridModule.forRoot()\n  ],\n  exports: [RouterModule],\n  providers: [SettingsService, NgbActiveModal, DataSharingService, DatePipe, InventoryService, InvoicingService, AfterSaleService],\n  declarations: [AccountingSettingComponent, CreateAccountComponent, AccountListComponent, AgregatComponent, JournalComponent, JournalDefautComponent, ProductLigneComponent, SubAccountComponent, CostCenterComponent, CreateTaxComponent]\n})\nexport class AccountingSettingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9hZ3JlZ2F0L2FncmVnYXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { string } from '@amcharts/amcharts4/core';\n\n@Component({\n  selector: 'kt-agregat',\n  templateUrl: './agregat.component.html',\n  styleUrls: ['./agregat.component.scss']\n})\nexport class AgregatComponent implements OnInit {\n  code : string;\n  description : string;\n  type : string;\n \n  agregatForm: FormGroup;\n  hasFormErrors: boolean = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private agregatFB: FormBuilder\n  ) { }\n\n\n\n  ngOnInit() {\n    this.initagregatForm();\n  }\n\n  initagregatForm() {\n  \n    this.agregatForm = this.agregatFB.group({\n      code: [this.code, Validators.required],\n      description: [this.description, Validators.required],\n      type: [this.type, Validators.required],\n      \n    \n        })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9jb3N0LWNlbnRlci9jb3N0LWNlbnRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { string } from '@amcharts/amcharts4/core';\nimport { AngularGridInstance, GridService, Column, GridOption, FieldType, Editors, OnEventArgs, Formatters } from 'angular-slickgrid';\n\n@Component({\n  selector: 'kt-cost-center',\n  templateUrl: './cost-center.component.html',\n  styleUrls: ['./cost-center.component.scss']\n})\nexport class CostCenterComponent implements OnInit {\n  code : string;\n  description : string;\n\n  ccForm: FormGroup;\n\n  hasFormErrors: boolean = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private ccFB: FormBuilder,\n    \n  ) {}\n\n \n\n  ngOnInit() {\n    this.initccForm();\n  \n  }\n\n  initccForm() {\n  \n      this.ccForm = this.ccFB.group({\n      code: [this.code, Validators.required],\n      description: [this.description, Validators.required],\n    })\n\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9jcmVhdGUtYWNjb3VudC9jcmVhdGUtYWNjb3VudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { string } from '@amcharts/amcharts4/core';\n\n@Component({\n  selector: 'kt-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.scss']\n})\n\n\nexport class CreateAccountComponent implements OnInit {\n\n  code : string;\n  description : string;\n  type : string;\n  devise : string;\n  accountstat : string;\n  indice: BigInteger;\n  loading = false;\n  typeList: any;\n  accountForm: FormGroup;\n  hasFormErrors: boolean = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private accountFB: FormBuilder\n  ) { }\n\n\n\n  ngOnInit() {\n    this.initaccountForm();\n  }\n\n  initaccountForm() {\n  \n    this.accountForm = this.accountFB.group({\n      code: [this.code, Validators.required],\n      description: [this.description, Validators.required],\n      type: [this.type, Validators.required],\n      devise: [this.devise, Validators.required],\n      \n    \n        })\n  }\n\n\n\n  \n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9jcmVhdGUtdGF4L2NyZWF0ZS10YXguY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { string } from '@amcharts/amcharts4/core';\n\n@Component({\n  selector: 'kt-create-tax',\n  templateUrl: './create-tax.component.html',\n  styleUrls: ['./create-tax.component.scss']\n})\nexport class CreateTaxComponent implements OnInit {\n\n  code:string;\n  classe:string;\n  description:string;\n  emploi: string;\n  taux: number;\n  ctachat: string;\n  ctaabs: string;\n  ctcf: string;\n  ctccf: string;\n  cstax: string;\n  crcc: string;\n  cesf: string;\n\n  taxForm: FormGroup;\n  hasFormErrors: boolean = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private taxFB: FormBuilder\n  ) { }\n\n\n  ngOnInit() {\n    this.inittaxForm();\n  }\n\n  inittaxForm() {\n  \n    this.taxForm = this.taxFB.group({\n      code: [this.code, Validators.required],\n      classe: [this.classe, Validators.required],\n      description: [this.description, Validators.required],\n      emploi: [this.emploi, Validators.required],\n      taux: [this.taux, Validators.required],\n      ctachat: [this.ctachat, Validators.required],\n      ctaabs:  [this.ctaabs, Validators.required],\n      ctcf:  [this.ctcf, Validators.required],\n      ctccf: [this.ctccf,Validators.required],\n      cstax: [this.cstax,Validators.required],\n      crcc: [this.crcc,Validators.required],\n      cesf: [this.cesf,Validators.required],\n    })\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9qb3VybmFsLWRlZmF1dC9qb3VybmFsLWRlZmF1dC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { string } from '@amcharts/amcharts4/core';\n\n@Component({\n  selector: 'kt-journal-defaut',\n  templateUrl: './journal-defaut.component.html',\n  styleUrls: ['./journal-defaut.component.scss']\n})\nexport class JournalDefautComponent implements OnInit {\n\n  typetrans : string;\n  typedoc : string;\n  journal : string;\n \n  journaldefautForm: FormGroup;\n  hasFormErrors: boolean = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private journaldefautFB: FormBuilder\n  ) { }\n\n\n\n  ngOnInit() {\n    this.initjournaldefautForm();\n  }\n\n  initjournaldefautForm() {\n  \n    this.journaldefautForm = this.journaldefautFB.group({\n      typetrans: [this.typetrans, Validators.required],\n      typedoc: [this.typedoc, Validators.required],\n      journal: [this.journal, Validators.required],\n      \n    \n        })\n  }\n\n\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9qb3VybmFsL2pvdXJuYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { string } from '@amcharts/amcharts4/core';\n\n@Component({\n  selector: 'kt-journal',\n  templateUrl: './journal.component.html',\n  styleUrls: ['./journal.component.scss']\n})\nexport class JournalComponent implements OnInit {\n\n  code : string;\n  description : string;\n  type : string;\n \n  journalForm: FormGroup;\n  hasFormErrors: boolean = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private journalFB: FormBuilder\n  ) { }\n\n\n\n  ngOnInit() {\n    this.initjournalForm();\n  }\n\n  initjournalForm() {\n  \n    this.journalForm = this.journalFB.group({\n      code: [this.code, Validators.required],\n      description: [this.description, Validators.required],\n      type: [this.type, Validators.required],\n      \n    \n        })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9wcm9kdWN0LWxpZ25lL3Byb2R1Y3QtbGlnbmUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { string } from '@amcharts/amcharts4/core';\n\n@Component({\n  selector: 'kt-product-ligne',\n  templateUrl: './product-ligne.component.html',\n  styleUrls: ['./product-ligne.component.scss']\n})\nexport class ProductLigneComponent implements OnInit {\n\n  ligne : string;\n  description : string;\n  tauxtaxe : string;\n  sscompte : string;\n  ccout : string;\n  cstock : string;\n  ccstock: string;\n  scstock: string;\n  cecart : string;\n  ccecart: string;\n  scecart: string;\n  crebut : string;\n  ccrebut: string;\n  screbut: string;\n  reval : string;\n  sreval: string;\n  creval: string;\n  cetrans : string;\n  scetrans: string;\n  ccetrans: string;\n  cvente : string;\n  scvente: string;\n  ccvente: string;\n  cremise : string;\n  scremise: string;\n  ccremise: string;\n  cpv : string;\n  scpv: string;\n  ccpv: string;\n  cpvmo : string;\n  scpvmo: string;\n  ccpvmo: string;\n  cpvfgv : string;\n  scpvfgv: string;\n  ccpvfgv: string;\n  cpvfgf : string;\n  scpvfgf: string;\n  ccpvfgf: string;\n  cpvst : string;\n  scpvst: string;\n  ccpvst: string;\n  cachat : string;\n  scachat: string;\n  ccachat: string;\n  croa : string;\n  scroa: string;\n  ccroa: string;\n  cifgf : string;\n  scifgf: string;\n  ccifgf: string;\n  cepoa : string;\n  scepoa: string;\n  ccepoa: string;\n  cecf: string;\n  scecf: string;\n  ccecf: string;\n  cetcf: string;\n  scetcf: string;\n  ccetcf: string;\n  csata: string;\n  scsata: string;\n  ccsata: string;\n  ceum: string;\n  sceum: string;\n  cceum: string;\n  cetm: string;\n  scetm: string;\n  ccetm: string;\n  ceme: string;\n  sceme: string;\n  cceme: string;\n  cprod: string;\n  scprod: string;\n  ccprod: string;\n  ceust: string;\n  sceust: string;\n  cceust: string;\n  ctst: string;\n  sctst: string;\n  cctst: string;\n  cencour: string;\n  scencour: string;\n  ccencour: string;\n  cecof: string;\n  scecof: string;\n  ccecof: string;\n\n\n\n  productligneForm: FormGroup;\n  stockForm: FormGroup;\n  venteForm: FormGroup;\n  achatForm: FormGroup;\n  prodForm: FormGroup;\n\n  hasFormErrors: boolean = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private productligneFB: FormBuilder,\n    private stockFB: FormBuilder,\n    private venteFB: FormBuilder,\n    private achatFB: FormBuilder,\n    private prodFB:  FormBuilder,\n\n  ) {}\n\n\n\n  ngOnInit() {\n    this.initproductligneForm();\n    this.initstockForm();\n    this.initventeForm();\n    this.initachatForm();\n    this.initprodForm();\n  \n  }\n\n  initproductligneForm() {\n  \n    this.productligneForm = this.productligneFB.group({\n      ligne: [this.ligne, Validators.required],\n      description: [this.description, Validators.required],\n      tauxtaxe: [this.tauxtaxe, Validators.required],\n      sscompte: [this.sscompte, Validators.required],\n      ccout: [this.ccout, Validators.required],\n      \n  \n    })\n\n  }\n\n  initstockForm() {\n  \n    this.stockForm = this.stockFB.group({\n      cstock:  [this.cstock, Validators.required],\n      cecart:  [this.cecart, Validators.required],\n      crebut:  [this.crebut, Validators.required],\n      reval:   [this.reval, Validators.required],\n      cetrans: [this.cetrans, Validators.required],\n\n\n\n    })\n  }  \n\n  initventeForm() {\n    this.venteForm = this.venteFB.group({ \n      cvente: [this.cvente, Validators.required],\n      cremise: [this.cremise, Validators.required],\n      cpv: [this.cpv, Validators.required],\n      cpvmo: [this.cpvmo, Validators.required],\n      cpvfgv: [this.cpvfgv, Validators.required],\n      cpvfgf: [this.cpvfgf, Validators.required],\n      cpvst: [this.cpvst, Validators.required],\n    })\n  }\n\n  initachatForm() {\n    this.achatForm = this.achatFB.group({ \n      cachat: [this.cachat, Validators.required],\n      croa: [this.croa, Validators.required],\n      cifgf: [this.cifgf, Validators.required],\n      cepoa: [this.cepoa, Validators.required],\n      cecf: [this.cecf, Validators.required],\n      cetcf: [this.cetcf, Validators.required],  \n      \n    \n    })\n  }\n\n  initprodForm() {\n    this.prodForm = this.prodFB.group({ \n      csata: [this.csata, Validators.required], \n      ceum: [this.ceum, Validators.required], \n      cetm: [this.cetm, Validators.required], \n      ceme: [this.ceme, Validators.required],\n      cprod: [this.cprod, Validators.required],\n      ceust: [this.ceust, Validators.required],\n      ctst: [this.ctst, Validators.required],\n      cencour: [this.cencour, Validators.required],\n      cecof: [this.cecof, Validators.required],\n    })\n  }\n\n\n \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2FjY291bnRpbmctc2V0dGluZy9zdWItYWNjb3VudC9zdWItYWNjb3VudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { string } from '@amcharts/amcharts4/core';\nimport { AngularGridInstance, GridService, Column, GridOption, FieldType, Editors, OnEventArgs, Formatters } from 'angular-slickgrid';\n\n\n@Component({\n  selector: 'kt-sub-account',\n  templateUrl: './sub-account.component.html',\n  styleUrls: ['./sub-account.component.scss']\n})\nexport class SubAccountComponent implements OnInit {\n  code : string;\n  description : string;\n\n\n\n\n\n  subForm: FormGroup;\n\n  hasFormErrors: boolean = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private subFB: FormBuilder,\n    \n  ) {}\n\n  \n\n\n  ngOnInit() {\n    this.initsubForm();\n  \n  }\n\n  initsubForm() {\n  \n      this.subForm = this.subFB.group({\n      code: [this.code, Validators.required],\n      description: [this.description, Validators.required],\n    })\n\n  }\n\n  \n}\n"],"sourceRoot":""}